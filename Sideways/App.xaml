<Application x:Class="Sideways.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:alphaVantage="clr-namespace:Sideways.AlphaVantage"
             xmlns:sideways="clr-namespace:Sideways"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/Geometries.xaml" />
                <ResourceDictionary Source="Resources/Button.xaml" />
                <ResourceDictionary Source="Resources/ScrollBar.xaml" />
                <ResourceDictionary Source="Resources/ComboBox.xaml" />
                <ResourceDictionary Source="Resources/DataGrid.xaml" />
                <ResourceDictionary Source="Resources/TabControl.xaml" />
                <ResourceDictionary Source="Resources/TreeView.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="VerticalAxisGridSplitter" TargetType="{x:Type GridSplitter}">
                <Setter Property="Width" Value="1" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="Foreground" Value="{x:Static sideways:Brushes.DarkGray}" />
                <Setter Property="ShowsPreview" Value="False" />
                <!--  We  hack it with negative margin for easier resize  -->
                <Setter Property="Panel.ZIndex" Value="100" />
                <Setter Property="sideways:VerticalGridSplitter.IsToggleEnabled" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridSplitter}">
                            <Border Margin="-12,0" Background="Transparent">
                                <Rectangle Width="1"
                                           HorizontalAlignment="Center"
                                           Fill="{TemplateBinding Foreground}"
                                           Stretch="Fill" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type ListBox}">
                <Setter Property="Foreground" Value="{x:Static sideways:Brushes.Gray}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
            </Style>

            <Style TargetType="{x:Type Window}">
                <Setter Property="Background" Value="{x:Static sideways:Brushes.Background}" />
                <Setter Property="TextElement.Foreground" Value="{x:Static sideways:Brushes.Gray}" />
            </Style>

            <Style TargetType="{x:Type Expander}">
                <Setter Property="Foreground" Value="{x:Static sideways:Brushes.Gray}" />
                <Setter Property="Background" Value="Transparent" />
            </Style>

            <Style TargetType="{x:Type ToolTip}">
                <Setter Property="Background" Value="{x:Static sideways:Brushes.Background}" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
                <Setter Property="BorderThickness" Value="0" />
            </Style>

            <Style TargetType="{x:Type ContextMenu}">
                <Setter Property="Background" Value="{x:Static sideways:Brushes.Background}" />
            </Style>

            <Style TargetType="{x:Type MenuItem}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{x:Static sideways:Brushes.Text}" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{x:Static sideways:Brushes.DisabledText}" />
                        <Setter Property="FontStyle" Value="Oblique" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="IconStyle" TargetType="{x:Type Shape}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Stretch" Value="Uniform" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Width" Value="10" />
                <Setter Property="Height" Value="10" />
                <Setter Property="Fill" Value="{x:Static sideways:Brushes.EnabledText}" />
                <Setter Property="StrokeThickness" Value="0" />
                <Setter Property="Stroke" Value="{x:Null}" />
                <Style.Triggers>
                    <Trigger Property="sideways:Icon.IsSpinning" Value="True">
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <RotateTransform Angle="0" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />

                        <Trigger.EnterActions>
                            <BeginStoryboard x:Name="Spin">
                                <Storyboard>
                                    <DoubleAnimation RepeatBehavior="Forever"
                                                     Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)"
                                                     From="0"
                                                     To="360"
                                                     Duration="0:0:2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <StopStoryboard BeginStoryboardName="Spin" />
                        </Trigger.ExitActions>
                    </Trigger>

                    <Trigger Property="sideways:Icon.IsPulsing" Value="True">
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <TranslateTransform X="0" Y="0" />
                            </Setter.Value>
                        </Setter>

                        <Trigger.EnterActions>
                            <BeginStoryboard x:Name="Pulse">
                                <Storyboard>
                                    <DoubleAnimation RepeatBehavior="Forever"
                                                     Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)"
                                                     From="-3"
                                                     To="3"
                                                     Duration="0:0:2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <StopStoryboard BeginStoryboardName="Pulse" />
                        </Trigger.ExitActions>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type TextBox}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Foreground" Value="{x:Static sideways:Brushes.EnabledText}" />
                <Setter Property="Background" Value="Transparent" />

                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{x:Static sideways:Brushes.DisabledText}" />
                        <Setter Property="FontStyle" Value="Oblique" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <sideways:DownloadStatusTemplateSelector x:Key="DownloadStatusIconSelector">
                <sideways:DownloadStatusTemplateSelector.Unknown>
                    <DataTemplate>
                        <Path Data="{StaticResource QuestionGeometry}"
                              Fill="{x:Static sideways:Brushes.DisabledText}"
                              Style="{StaticResource IconStyle}" />
                    </DataTemplate>
                </sideways:DownloadStatusTemplateSelector.Unknown>

                <sideways:DownloadStatusTemplateSelector.Waiting>
                    <DataTemplate>
                        <Path Data="{StaticResource ArrowDownGeometry}"
                              Fill="{x:Static sideways:Brushes.DisabledText}"
                              Style="{StaticResource IconStyle}" />
                    </DataTemplate>
                </sideways:DownloadStatusTemplateSelector.Waiting>

                <sideways:DownloadStatusTemplateSelector.Running>
                    <DataTemplate>
                        <Grid>
                            <Path Data="{StaticResource ArrowDownGeometry}"
                                  Fill="{x:Static sideways:Brushes.Pressed}"
                                  Style="{StaticResource IconStyle}" />

                            <Rectangle Width="3"
                                       Height="3"
                                       sideways:Icon.IsPulsing="True"
                                       Fill="{x:Static sideways:Brushes.DarkGray}"
                                       Style="{StaticResource IconStyle}" />
                        </Grid>
                    </DataTemplate>
                </sideways:DownloadStatusTemplateSelector.Running>

                <sideways:DownloadStatusTemplateSelector.Completed>
                    <DataTemplate>
                        <Path Data="{StaticResource CheckGeometry}"
                              Fill="{x:Static sideways:Brushes.Ma200}"
                              Style="{StaticResource IconStyle}" />
                    </DataTemplate>
                </sideways:DownloadStatusTemplateSelector.Completed>

                <sideways:DownloadStatusTemplateSelector.Error>
                    <DataTemplate>
                        <Path Margin="1"
                              Data="{StaticResource CrossGeometry}"
                              Fill="{x:Static sideways:Brushes.Ma50}"
                              Style="{StaticResource IconStyle}" />
                    </DataTemplate>
                </sideways:DownloadStatusTemplateSelector.Error>
            </sideways:DownloadStatusTemplateSelector>

            <DataTemplate DataType="{x:Type sideways:Measurement}">
                <Grid Background="{x:Static sideways:Brushes.Background}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="6" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0"
                               Grid.Column="2"
                               HorizontalAlignment="Left"
                               Text="{Binding TimeChange,
                                              Mode=OneTime}" />
                    <TextBlock Grid.Row="0"
                               Grid.Column="4"
                               HorizontalAlignment="Left"
                               Text="{Binding Candles,
                                              StringFormat='{}{0} bars',
                                              Mode=OneTime}" />

                    <TextBlock Grid.Row="1"
                               Grid.Column="0"
                               Margin="4,0"
                               Text="{Binding AtrChange,
                                              StringFormat='{}{0:F0}ATR',
                                              Mode=OneTime}"
                               Visibility="{Binding AtrChange,
                                                    Converter={x:Static sideways:NullToVisibilityConverter.CollapsedWhenNullElseVisible}}" />

                    <TextBlock Grid.Row="1"
                               Grid.Column="1"
                               Margin="4,0"
                               Text="{Binding AdrChange,
                                              StringFormat='{}{0:F0}ADR',
                                              Mode=OneTime}"
                               Visibility="{Binding AdrChange,
                                                    Converter={x:Static sideways:NullToVisibilityConverter.CollapsedWhenNullElseVisible}}" />

                    <TextBlock Grid.Row="1"
                               Grid.Column="2"
                               HorizontalAlignment="Left"
                               Text="{Binding DollarChange,
                                              StringFormat='${0:F1}',
                                              Mode=OneTime}" />
                    <TextBlock Grid.Row="1"
                               Grid.Column="4"
                               HorizontalAlignment="Left"
                               Text="{Binding PercentChange,
                                              StringFormat='{}{0:F1}',
                                              Mode=OneTime}" />
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="{x:Type sideways:EarningsViewModel}">
                <StackPanel MinWidth="92"
                            Background="{x:Static sideways:Brushes.SemiTransparentBackground}"
                            ToolTipService.Placement="Top"
                            ToolTipService.ShowDuration="60000">
                    <StackPanel.Resources>
                        <Style x:Key="ChangeBarStyle" TargetType="{x:Type Rectangle}">
                            <Setter Property="Width" Value="4" />
                            <Setter Property="Height" Value="2" />
                            <Setter Property="Margin" Value="1,0" />
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="UseLayoutRounding" Value="True" />
                        </Style>
                    </StackPanel.Resources>

                    <StackPanel.ToolTip>
                        <ToolTip>
                            <StackPanel>
                                <TextBlock Text="{Binding QoQ, StringFormat='QoQ {0:F0}', Mode=OneTime}" />
                                <sideways:ChangesChart Height="25"
                                                       HorizontalAlignment="Left"
                                                       Changes="{Binding DescendingQuarterlyChanges}" />

                                <TextBlock Text="{Binding YoY, StringFormat='YoY {0:F0}', Mode=OneTime}" />
                                <sideways:ChangesChart Height="25"
                                                       HorizontalAlignment="Left"
                                                       Changes="{Binding DescendingYearlyChanges}" />

                                <TextBlock Text="{Binding Eps, StringFormat='EPS {0:F2}', Mode=OneTime}" />
                                <sideways:EarningsChart Height="50" Earnings="{Binding DescendingEarnings, Mode=OneTime}" />

                                <TextBlock Text="{Binding Estimate, StringFormat='Estimate {0:F2}', Mode=OneTime}" />
                                <TextBlock Text="{Binding Surprise, StringFormat='Surprise {0:F2}', Mode=OneTime}" />
                                <TextBlock Text="{Binding SurprisePercentage, StringFormat='Surprise {0:F1}', Mode=OneTime}" />
                            </StackPanel>
                        </ToolTip>
                    </StackPanel.ToolTip>
                    <TextBlock HorizontalAlignment="Center"
                               Text="{Binding SurprisePercentage,
                                              StringFormat='{}{0:F0}',
                                              Mode=OneTime}"
                               Visibility="{Binding SurprisePercentage,
                                                    Mode=OneTime,
                                                    Converter={sideways:SurpriseToVisibilityConverter 25}}" />

                    <Grid HorizontalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Row="0"
                                   Grid.Column="0"
                                   HorizontalAlignment="Center"
                                   Text="{Binding QoQ,
                                                  StringFormat='S0',
                                                  Mode=OneTime}" />

                        <TextBlock Grid.Row="0"
                                   Grid.Column="1"
                                   Text=" / " />
                        <TextBlock Grid.Row="0"
                                   Grid.Column="2"
                                   HorizontalAlignment="Center"
                                   Text="{Binding YoY,
                                                  StringFormat='S0',
                                                  Mode=OneTime}" />
                        <UniformGrid Grid.Row="1"
                                     Grid.Column="0"
                                     HorizontalAlignment="Center"
                                     Rows="1">
                            <Rectangle Fill="{Binding DescendingQuarterlyChanges, Converter={x:Static sideways:ChangeToBrushConverter.Item2}, Mode=OneTime}" Style="{StaticResource ChangeBarStyle}" />
                            <Rectangle Fill="{Binding DescendingQuarterlyChanges, Converter={x:Static sideways:ChangeToBrushConverter.Item1}, Mode=OneTime}" Style="{StaticResource ChangeBarStyle}" />
                        </UniformGrid>

                        <UniformGrid Grid.Row="1"
                                     Grid.Column="2"
                                     HorizontalAlignment="Center"
                                     Rows="1">
                            <Rectangle Fill="{Binding DescendingYearlyChanges, Converter={x:Static sideways:ChangeToBrushConverter.Item2}, Mode=OneTime}" Style="{StaticResource ChangeBarStyle}" />
                            <Rectangle Fill="{Binding DescendingYearlyChanges, Converter={x:Static sideways:ChangeToBrushConverter.Item1}, Mode=OneTime}" Style="{StaticResource ChangeBarStyle}" />
                        </UniformGrid>
                    </Grid>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="SymbolDownloadsTemplate" DataType="{x:Type alphaVantage:SymbolDownloads}">
                <StackPanel>
                    <TextBlock Text="{Binding Symbol, StringFormat='Download missing data for: {0}'}" />
                    <TextBlock Text="{Binding DayText}" />
                    <TextBlock Text="{Binding MinutesText}" />
                    <TextBlock Text="{Binding State.Start, StringFormat='Start: {0:t}'}" />
                    <TextBlock Text="{Binding State.End, StringFormat='End: {0:t}'}" />
                    <TextBlock Text="{Binding State.Duration, StringFormat='Duration: {0:t}'}" />
                    <TextBlock Foreground="{x:Static sideways:Brushes.Error}" Text="{Binding State.Exception.Message, StringFormat='Error: {0:t}'}" />
                    <ItemsControl ItemsSource="{Binding AllDownloads}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type alphaVantage:Download}">
                                <StackPanel Orientation="Horizontal">
                                    <ContentPresenter Content="{Binding State.Status}" ContentTemplateSelector="{StaticResource DownloadStatusIconSelector}" />
                                    <TextBlock Text="{Binding Info}" />
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>
    </Application.Resources>
</Application>
