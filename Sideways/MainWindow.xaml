<Window x:Class="Sideways.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:alphaVantage="clr-namespace:Sideways.AlphaVantage"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sideways="clr-namespace:Sideways"
        Title="Sideways"
        d:DataContext="{d:DesignInstance sideways:MainViewModel,
                                         IsDesignTimeCreatable=False}"
        sideways:SelectCommands.IsEnabled="True"
        Background="{x:Static sideways:Brushes.Background}"
        FocusManager.FocusedElement="{Binding ElementName=SymbolComboBox}"
        Loaded="OnLoaded"
        TextElement.Foreground="{x:Static sideways:Brushes.Text}"
        WindowState="Maximized"
        mc:Ignorable="d">
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="BorderThickness" Value="1" />
            <Style.Triggers>
                <Trigger Property="WindowState" Value="Maximized">
                    <!--  Hack around WPF weirdness, bonds not correct when maximized  -->
                    <Setter Property="BorderThickness" Value="8" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Style>

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="24"
                      CornerRadius="0"
                      GlassFrameThickness="0"
                      NonClientFrameEdges="None"
                      ResizeBorderThickness="2"
                      UseAeroCaptionButtons="False" />
    </WindowChrome.WindowChrome>

    <Window.CommandBindings>
        <CommandBinding Command="Copy" Executed="OnCopy" />
    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Key="B"
                    Command="{Binding AddBookmarkCommand}"
                    Modifiers="Control" />

        <KeyBinding Key="W"
                    Command="{Binding AddToWatchlistCommand}"
                    Modifiers="Control" />

        <KeyBinding Key="Left"
                    Command="{Binding SkipLeftCommand}"
                    CommandParameter="{x:Static sideways:CandleInterval.Day}" />

        <KeyBinding Key="Left"
                    Command="{Binding SkipLeftCommand}"
                    CommandParameter="{x:Static sideways:CandleInterval.Hour}"
                    Modifiers="Shift" />

        <KeyBinding Key="Right"
                    Command="{Binding SkipRightCommand}"
                    CommandParameter="{x:Static sideways:CandleInterval.Day}" />

        <KeyBinding Key="Right"
                    Command="{Binding SkipRightCommand}"
                    CommandParameter="{x:Static sideways:CandleInterval.Hour}"
                    Modifiers="Shift" />

        <KeyBinding Key="Space" Command="{Binding Animation.ToggleCommand}" />
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="24" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid x:Name="TitleBar">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0" Text="Sideways" />

            <StackPanel Grid.Column="1" Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style x:Key="NavigationButton"
                           BasedOn="{StaticResource {x:Type RadioButton}}"
                           TargetType="{x:Type RadioButton}">
                        <Setter Property="Width" Value="40" />
                        <Setter Property="Height" Value="24" />
                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                        <Setter Property="GroupName" Value="NavigationButtons" />
                    </Style>
                </StackPanel.Resources>

                <RadioButton x:Name="BookmarksButton"
                             Style="{StaticResource NavigationButton}"
                             ToolTip="Bookmarks">
                    <Path Data="{StaticResource BookmarkGeometry}"
                          Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type RadioButton}},
                                         Path=Foreground}"
                          Style="{StaticResource IconStyle}" />
                </RadioButton>

                <RadioButton x:Name="ScanButton"
                             Style="{StaticResource NavigationButton}"
                             ToolTip="Scan">
                    <Path Data="{StaticResource RecycleGeometry}"
                          Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type RadioButton}},
                                         Path=Foreground}"
                          Style="{StaticResource IconStyle}" />
                </RadioButton>

                <RadioButton x:Name="SimulationButton"
                             Style="{StaticResource NavigationButton}"
                             ToolTip="Simulation">
                    <Path Data="{StaticResource CandleSticksGeometry}"
                          Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type RadioButton}},
                                         Path=Foreground}"
                          Style="{StaticResource IconStyle}" />
                </RadioButton>

                <RadioButton x:Name="DownloadButton"
                             Style="{StaticResource NavigationButton}"
                             ToolTip="Downloader">
                    <Path Data="{StaticResource ArrowDownGeometry}"
                          Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type RadioButton}},
                                         Path=Foreground}"
                          Style="{StaticResource IconStyle}" />
                </RadioButton>

                <RadioButton x:Name="SettingsButton"
                             Style="{StaticResource NavigationButton}"
                             ToolTip="Settings">
                    <Path Data="{StaticResource CogsGeometry}"
                          Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type RadioButton}},
                                         Path=Foreground}"
                          Style="{StaticResource IconStyle}" />
                </RadioButton>
            </StackPanel>

            <StackPanel x:Name="WindowButtons"
                        Grid.Column="2"
                        Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style x:Key="WindowButton"
                           BasedOn="{StaticResource {x:Type Button}}"
                           TargetType="{x:Type Button}">
                        <Setter Property="Width" Value="40" />
                        <Setter Property="Height" Value="24" />
                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                    </Style>
                </StackPanel.Resources>

                <Button x:Name="WindowMinimizeButton"
                        Click="OnClickMinimize"
                        Style="{StaticResource WindowButton}">
                    <Path Data="{StaticResource WindowMinimizeGeometry}" Style="{StaticResource IconStyle}" />
                </Button>

                <Button x:Name="WindowMaximizeRestoreButton"
                        Click="OnClickMaximizeRestore"
                        Style="{StaticResource WindowButton}">
                    <Path Data="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState, Converter={sideways:WindowStateToGeometryConverter MaximizeGeometry={StaticResource WindowMaximizeGeometry}, RestoreGeometry={StaticResource WindowRestoreGeometry}}}" Style="{StaticResource IconStyle}" />
                </Button>

                <Button x:Name="WindowCloseButton"
                        Click="OnClickClose"
                        Style="{StaticResource WindowButton}">
                    <Path Data="{StaticResource WindowCloseGeometry}" Style="{StaticResource IconStyle}" />
                </Button>
            </StackPanel>
        </Grid>

        <Grid x:Name="Root" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Grid x:Name="Charts"
                  Panel.ZIndex="101"
                  sideways:Chart.BookmarkTime="{Binding Bookmarks.SelectedBookmark.Time,
                                                        FallbackValue={x:Null}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Grid x:Name="LeftPane" Grid.Column="0">
                    <TextBlock HorizontalAlignment="Left"
                               VerticalAlignment="Top"
                               Foreground="{x:Static sideways:Brushes.Gray}"
                               Text="W" />
                    <sideways:Chart x:Name="LeftChart"
                                    CandleInterval="Week"
                                    ItemsSource="{Binding CurrentSymbol.Candles}"
                                    Time="{Binding Time}">
                        <sideways:CrossHairDecorator>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="5*" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <sideways:ChartBackground Grid.Row="0"
                                                          Grid.RowSpan="3"
                                                          Grid.Column="0" />

                                <Grid Grid.Row="0" Grid.Column="0">

                                    <sideways:MovingAverage Brush="{x:Static sideways:Brushes.Purple}" Period="10" />

                                    <sideways:MovingAverage Brush="{x:Static sideways:Brushes.Yellow}" Period="20" />

                                    <sideways:MeasureDecorator>
                                        <sideways:CandleSticks />
                                    </sideways:MeasureDecorator>
                                </Grid>

                                <sideways:TextTickBar Grid.Row="0" Grid.Column="1" />

                                <sideways:TimeTickBar Grid.Row="1" Grid.Column="0" />

                                <sideways:VolumeBars Grid.Row="2" Grid.Column="0" />
                            </Grid>
                        </sideways:CrossHairDecorator>
                    </sideways:Chart>
                </Grid>

                <GridSplitter Grid.Column="1"
                              Panel.ZIndex="103"
                              Focusable="False"
                              Style="{StaticResource VerticalAxisGridSplitter}" />

                <Grid x:Name="MiddlePane" Grid.Column="2">
                    <sideways:Chart x:Name="MiddleChart"
                                    CandleInterval="Day"
                                    ItemsSource="{Binding CurrentSymbol.Candles}"
                                    Time="{Binding Time}">
                        <sideways:CrossHairDecorator>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="5*" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <sideways:ChartBackground Grid.Row="0"
                                                          Grid.RowSpan="3"
                                                          Grid.Column="0"
                                                          Earnings="{Binding CurrentSymbol.QuarterlyEarnings}" />

                                <Grid Grid.Row="0" Grid.Column="0">

                                    <sideways:MovingAverage Brush="{x:Static sideways:Brushes.Purple}" Period="10" />

                                    <sideways:MovingAverage Brush="{x:Static sideways:Brushes.Yellow}" Period="20" />

                                    <sideways:MovingAverage Brush="{x:Static sideways:Brushes.Red}" Period="50" />

                                    <sideways:MovingAverage Brush="{x:Static sideways:Brushes.Orange}" Period="100" />

                                    <sideways:MovingAverage Brush="{x:Static sideways:Brushes.Blue}" Period="150" />

                                    <sideways:MovingAverage Brush="{x:Static sideways:Brushes.Green}" Period="200" />

                                    <sideways:MeasureDecorator>
                                        <sideways:CandleSticks />
                                    </sideways:MeasureDecorator>

                                    <sideways:EarningsBar VerticalAlignment="Bottom" Earnings="{Binding CurrentSymbol.QuarterlyEarnings}" />
                                </Grid>

                                <sideways:TextTickBar Grid.Row="0" Grid.Column="1" />

                                <sideways:TimeTickBar Grid.Row="1" Grid.Column="0" />

                                <sideways:VolumeBars Grid.Row="2" Grid.Column="0" />
                            </Grid>
                        </sideways:CrossHairDecorator>
                    </sideways:Chart>

                    <StackPanel Margin="10,10"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Background="{x:Static sideways:Brushes.SemiTransparentBackground}">
                        <StackPanel Orientation="Horizontal">
                            <ComboBox x:Name="SymbolComboBox"
                                      HorizontalAlignment="Left"
                                      sideways:ComboBoxEx.IsSymbolSearch="True"
                                      FontSize="24"
                                      Foreground="{x:Static sideways:Brushes.Gray}"
                                      IsEditable="True"
                                      ItemsSource="{Binding Symbols}"
                                      SelectedItem="{Binding CurrentSymbolText}"
                                      Text="{Binding CurrentSymbolText,
                                                     UpdateSourceTrigger=Explicit}" />

                            <Button Padding="2,0"
                                    d:DataContext="{d:DesignInstance Type=alphaVantage:SymbolDownloads}"
                                    Command="{Binding DownloadCommand}"
                                    Content="{Binding State.Status}"
                                    ContentTemplateSelector="{StaticResource DownloadStatusIconSelector}"
                                    Focusable="False"
                                    ToolTipService.ShowOnDisabled="True"
                                    Visibility="{Binding .,
                                                         Converter={x:Static sideways:NullToVisibilityConverter.CollapsedWhenNullElseVisible}}">
                                <Button.ToolTip>
                                    <ToolTip d:DataContext="{d:DesignInstance Type=alphaVantage:SymbolDownloads}" DataContext="{Binding RelativeSource={RelativeSource Self}, Path=PlacementTarget.DataContext}">
                                        <StackPanel>
                                            <TextBlock Text="{Binding Symbol, StringFormat='Download missing data for: {0}'}" />
                                            <TextBlock Text="{Binding DayText}" />
                                            <TextBlock Text="{Binding MinutesText}" />
                                            <TextBlock Text="{Binding State.Start, StringFormat='Start: {0:t}'}" />
                                            <TextBlock Text="{Binding State.End, StringFormat='End: {0:t}'}" />
                                            <TextBlock Text="{Binding State.Duration, StringFormat='Duration: {0:t}'}" />
                                            <TextBlock Foreground="{x:Static sideways:Brushes.Error}" Text="{Binding State.Exception.Message, StringFormat='Error: {0:t}'}" />
                                            <ItemsControl ItemsSource="{Binding AllDownloads}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate DataType="{x:Type alphaVantage:Download}">
                                                        <StackPanel Orientation="Horizontal">
                                                            <ContentPresenter Content="{Binding State.Status}" ContentTemplateSelector="{StaticResource DownloadStatusIconSelector}" />
                                                            <TextBlock Text="{Binding Info}" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </StackPanel>
                                    </ToolTip>
                                </Button.ToolTip>
                                <Button.DataContext>
                                    <MultiBinding Converter="{x:Static sideways:SymbolDownloadConverter.Default}">
                                        <Binding Path="CurrentSymbol.Symbol" />
                                        <Binding Path="Downloader.SymbolDownloads" />
                                    </MultiBinding>
                                </Button.DataContext>
                            </Button>
                        </StackPanel>

                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding Converter="{x:Static sideways:AdrConverter.Default}" StringFormat="ADR {0:F1}%">
                                    <Binding ElementName="MiddleChart" Path="Candles" />
                                    <Binding ElementName="MiddleChart" Path="Time" />
                                    <Binding ElementName="MiddleChart" Path="PriceRange" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>

                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding Converter="{x:Static sideways:AtrConverter.Default}" StringFormat="ATR {0:F1}$">
                                    <Binding ElementName="MiddleChart" Path="Candles" />
                                    <Binding ElementName="MiddleChart" Path="Time" />
                                    <Binding ElementName="MiddleChart" Path="PriceRange" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>

                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding Converter="{x:Static sideways:AverageDollarVolumeConverter.Default}" StringFormat="A$V {0:##,#0} M">
                                    <Binding ElementName="MiddleChart" Path="Candles" />
                                    <Binding ElementName="MiddleChart" Path="Time" />
                                    <Binding ElementName="MiddleChart" Path="PriceRange" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>

                        <TextBlock Text="{Binding Time, StringFormat='f'}" />
                        <TextBlock Foreground="{x:Static sideways:Brushes.Error}" Text="{Binding CurrentSymbol.Exception.Message, FallbackValue=''}" />
                    </StackPanel>
                </Grid>

                <GridSplitter Grid.Column="3"
                              Panel.ZIndex="102"
                              Focusable="False"
                              Style="{StaticResource VerticalAxisGridSplitter}" />

                <Grid x:Name="RightPane" Grid.Column="4">
                    <sideways:Chart x:Name="RightChart"
                                    CandleInterval="Hour"
                                    ItemsSource="{Binding CurrentSymbol.Candles}"
                                    Time="{Binding Time}">
                        <sideways:CrossHairDecorator>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="5*" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <sideways:ChartBackground Grid.Row="0"
                                                          Grid.RowSpan="3"
                                                          Grid.Column="0" />

                                <Grid Grid.Row="0" Grid.Column="0">
                                    <sideways:MovingAverage Brush="{x:Static sideways:Brushes.Purple}" Period="10" />

                                    <sideways:MovingAverage Brush="{x:Static sideways:Brushes.Yellow}" Period="20" />

                                    <sideways:VWap Brush="{x:Static sideways:Brushes.LightGray}" />

                                    <sideways:MeasureDecorator>
                                        <sideways:CandleSticks />
                                    </sideways:MeasureDecorator>
                                </Grid>

                                <sideways:TextTickBar Grid.Row="0" Grid.Column="1" />

                                <sideways:TimeTickBar Grid.Row="1" Grid.Column="0" />

                                <sideways:VolumeBars Grid.Row="2" Grid.Column="0" />
                            </Grid>
                        </sideways:CrossHairDecorator>
                    </sideways:Chart>
                    <StackPanel x:Name="IntradayIntervals"
                                Margin="12,12"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Orientation="Horizontal">
                        <StackPanel.Resources>
                            <Style BasedOn="{StaticResource {x:Type RadioButton}}" TargetType="{x:Type RadioButton}">
                                <Setter Property="GroupName" Value="RightIntervals" />
                                <Setter Property="MinWidth" Value="32" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type RadioButton}">
                                            <Border Background="{TemplateBinding Background}">
                                                <TextBlock HorizontalAlignment="Center"
                                                           Foreground="{TemplateBinding Foreground}"
                                                           Text="{TemplateBinding Content}" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </StackPanel.Resources>
                        <RadioButton Content="h" IsChecked="{Binding ElementName=RightChart, Path=CandleInterval, Converter={x:Static sideways:CandleIntervalToBoolConverter.Hour}}" />
                        <RadioButton Content="15 m" IsChecked="{Binding ElementName=RightChart, Path=CandleInterval, Converter={x:Static sideways:CandleIntervalToBoolConverter.FifteenMinutes}}" />
                        <RadioButton Content="5 m" IsChecked="{Binding ElementName=RightChart, Path=CandleInterval, Converter={x:Static sideways:CandleIntervalToBoolConverter.FiveMinutes}}" />
                        <RadioButton Content="1 m" IsChecked="{Binding ElementName=RightChart, Path=CandleInterval, Converter={x:Static sideways:CandleIntervalToBoolConverter.Minute}}" />
                    </StackPanel>
                </Grid>
            </Grid>

            <GridSplitter Grid.Column="1"
                          Panel.ZIndex="100"
                          Focusable="False"
                          Style="{StaticResource VerticalAxisGridSplitter}" />

            <Grid x:Name="ContextPane" Grid.Column="2">
                <sideways:SimulationView HorizontalAlignment="Right"
                                         DataContext="{Binding Simulation}"
                                         Visibility="{Binding ElementName=SimulationButton,
                                                              Path=IsChecked,
                                                              Converter={x:Static sideways:BoolToVisibilityConverter.VisibleWhenTrueElseCollapsed}}" />

                <sideways:BookmarksView HorizontalAlignment="Right"
                                        DataContext="{Binding Bookmarks}"
                                        Visibility="{Binding ElementName=BookmarksButton,
                                                             Path=IsChecked,
                                                             Converter={x:Static sideways:BoolToVisibilityConverter.VisibleWhenTrueElseCollapsed}}" />

                <sideways:ScanView HorizontalAlignment="Right"
                                   DataContext="{Binding Scan}"
                                   Visibility="{Binding ElementName=ScanButton,
                                                        Path=IsChecked,
                                                        Converter={x:Static sideways:BoolToVisibilityConverter.VisibleWhenTrueElseCollapsed}}" />

                <sideways:DownloadView Margin="6,0,0,0"
                                       HorizontalAlignment="Right"
                                       DataContext="{Binding Downloader}"
                                       Visibility="{Binding ElementName=DownloadButton,
                                                            Path=IsChecked,
                                                            Converter={x:Static sideways:BoolToVisibilityConverter.VisibleWhenTrueElseCollapsed}}" />

                <sideways:SettingsView HorizontalAlignment="Right"
                                       DataContext="{Binding Settings}"
                                       Visibility="{Binding ElementName=SettingsButton,
                                                            Path=IsChecked,
                                                            Converter={x:Static sideways:BoolToVisibilityConverter.VisibleWhenTrueElseCollapsed}}" />
            </Grid>
        </Grid>
    </Grid>
</Window>
