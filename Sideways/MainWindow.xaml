<Window x:Class="Sideways.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sideways="clr-namespace:Sideways"
        Title="Sideways"
        d:DataContext="{d:DesignInstance sideways:MainViewModel,
                                         IsDesignTimeCreatable=False}"
        Background="{x:Static sideways:Brushes.Background}"
        Loaded="OnLoaded"
        TextElement.Foreground="{x:Static sideways:Brushes.Text}"
        WindowState="Maximized"
        mc:Ignorable="d">
    <Window.CommandBindings>
        <CommandBinding Command="Copy" Executed="OnCopy" />
    </Window.CommandBindings>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <Grid x:Name="Charts">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <TextBlock HorizontalAlignment="Left"
                           VerticalAlignment="Top"
                           Foreground="{x:Static sideways:Brushes.Gray}"
                           Text="W" />
                <sideways:Chart x:Name="WeeklyChart"
                                CandleInterval="Week"
                                ExtraCandles="20"
                                ItemsSource="{Binding CurrentSymbol.Candles}"
                                Time="{Binding Time}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="5*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <sideways:ChartBackground Grid.Row="0"
                                                  Grid.RowSpan="3"
                                                  Grid.Column="0" />

                        <Grid Grid.Row="0" Grid.Column="0">

                            <sideways:MovingAverage Brush="{x:Static sideways:Brushes.Purple}" Period="10" />

                            <sideways:MovingAverage Brush="{x:Static sideways:Brushes.Yellow}" Period="20" />

                            <sideways:CandleSticks />
                            <sideways:CrossHair />
                        </Grid>

                        <sideways:TextTickBar Grid.Row="0" Grid.Column="1" />

                        <sideways:TimeTickBar Grid.Row="1" Grid.Column="0" />

                        <sideways:VolumeBars Grid.Row="2" Grid.Column="0" />
                    </Grid>
                </sideways:Chart>
            </Grid>

            <GridSplitter Grid.Column="1"
                          Focusable="False"
                          Style="{StaticResource VerticalAxisGridSplitter}" />

            <Grid Grid.Column="2">
                <sideways:Chart x:Name="DailyChart"
                                CandleInterval="Day"
                                ExtraCandles="200"
                                ItemsSource="{Binding CurrentSymbol.Candles}"
                                Time="{Binding Time}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="5*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <sideways:ChartBackground Grid.Row="0"
                                                  Grid.RowSpan="3"
                                                  Grid.Column="0" />

                        <Grid Grid.Row="0" Grid.Column="0">

                            <sideways:MovingAverage Brush="{x:Static sideways:Brushes.Purple}" Period="10" />

                            <sideways:MovingAverage Brush="{x:Static sideways:Brushes.Yellow}" Period="20" />

                            <sideways:MovingAverage Brush="{x:Static sideways:Brushes.Red}" Period="50" />

                            <sideways:MovingAverage Brush="{x:Static sideways:Brushes.Orange}" Period="100" />

                            <sideways:MovingAverage Brush="CadetBlue" Period="150" />

                            <sideways:MovingAverage Brush="{x:Static sideways:Brushes.Green}" Period="200" />

                            <sideways:CandleSticks />
                            <sideways:CrossHair />
                        </Grid>

                        <sideways:TextTickBar Grid.Row="0" Grid.Column="1" />

                        <sideways:TimeTickBar Grid.Row="1" Grid.Column="0" />

                        <sideways:VolumeBars Grid.Row="2" Grid.Column="0" />
                    </Grid>
                </sideways:Chart>

                <StackPanel Margin="10,10">
                    <ComboBox x:Name="SymbolComboBox"
                              HorizontalAlignment="Left"
                              sideways:ComboBoxEx.IsSymbolSearch="True"
                              FontSize="24"
                              Foreground="{x:Static sideways:Brushes.Gray}"
                              IsEditable="True"
                              ItemsSource="{Binding Symbols}"
                              SelectedItem="{Binding CurrentSymbolText}"
                              Text="{Binding CurrentSymbolText, UpdateSourceTrigger=Explicit}" />

                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding Converter="{x:Static sideways:AdrConverter.Default}" StringFormat="ADR(20) {0:F1}%">
                                <Binding ElementName="DailyChart" Path="Candles" />
                                <Binding ElementName="DailyChart" Path="Time" />
                                <Binding ElementName="DailyChart" Path="PriceRange" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>

                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding Converter="{x:Static sideways:AverageDollarVolumeConverter.Default}" StringFormat="A$(20) {0:##,#0} M">
                                <Binding ElementName="DailyChart" Path="Candles" />
                                <Binding ElementName="DailyChart" Path="Time" />
                                <Binding ElementName="DailyChart" Path="PriceRange" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>

                    <TextBlock Text="{Binding Time, StringFormat='f'}" />
                    <TextBlock Foreground="{x:Static sideways:Brushes.Error}" Text="{Binding CurrentSymbol.Exception.Message, FallbackValue=''}" />
                </StackPanel>
            </Grid>

            <GridSplitter Grid.Column="3"
                          Focusable="False"
                          Style="{StaticResource VerticalAxisGridSplitter}" />

            <Grid Grid.Column="4">
                <TextBlock HorizontalAlignment="Left"
                           VerticalAlignment="Top"
                           Foreground="{x:Static sideways:Brushes.Gray}"
                           Text="h" />
                <sideways:Chart x:Name="HourlyChart"
                                CandleInterval="Hour"
                                ExtraCandles="20"
                                ItemsSource="{Binding CurrentSymbol.Candles}"
                                Time="{Binding Time}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="5*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <sideways:ChartBackground Grid.Row="0"
                                                  Grid.RowSpan="3"
                                                  Grid.Column="0" />

                        <Grid Grid.Row="0" Grid.Column="0">
                            <sideways:MovingAverage Brush="{x:Static sideways:Brushes.Purple}" Period="10" />

                            <sideways:MovingAverage Brush="{x:Static sideways:Brushes.Yellow}" Period="20" />

                            <sideways:CandleSticks />

                            <sideways:CrossHair />
                        </Grid>

                        <sideways:TextTickBar Grid.Row="0" Grid.Column="1" />

                        <sideways:TimeTickBar Grid.Row="1" Grid.Column="0" />

                        <sideways:VolumeBars Grid.Row="2" Grid.Column="0" />
                    </Grid>
                </sideways:Chart>
            </Grid>
        </Grid>

        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0">
                <Button VerticalAlignment="Top"
                        Command="Open"
                        Content="Downloader"
                        Focusable="False">
                    <Button.CommandBindings>
                        <CommandBinding Command="Open" Executed="OnOpenDownloader" />
                    </Button.CommandBindings>
                </Button>

                <Button VerticalAlignment="Top"
                        Command="Open"
                        Content="Settings"
                        Focusable="False">
                    <Button.CommandBindings>
                        <CommandBinding Command="Open" Executed="OnOpenSettings" />
                    </Button.CommandBindings>
                </Button>
            </StackPanel>

            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock Text="Watch list" />
                <ListBox Grid.Row="1"
                         sideways:Sort.Direction="Ascending"
                         ItemsSource="{Binding WatchList}"
                         SelectedItem="{Binding CurrentSymbolText}" />
            </Grid>

            <Grid Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock Text="Simulation" />
                <ListBox Grid.Row="1"
                         ItemsSource="{Binding Simulation.Positions}"
                         SelectedItem="{Binding SelectedPosition}">
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type sideways:Position}">
                            <TextBlock Text="{Binding Symbol, Mode=OneTime}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <StackPanel Grid.Row="2" Visibility="{Binding Simulation, Converter={x:Static sideways:NullToVisibilityConverter.VisibleWhenNullElseCollapsed}}">
                    <Button Command="{Binding StartNewSimulationCommand}"
                            Content="New"
                            Focusable="False" />

                    <Button Command="Open"
                            Content="Open"
                            Focusable="False">
                        <Button.CommandBindings>
                            <CommandBinding Command="Open" Executed="OnOpenSimulation" />
                        </Button.CommandBindings>
                    </Button>
                </StackPanel>

                <StackPanel Grid.Row="2" Visibility="{Binding Simulation, Converter={x:Static sideways:NullToVisibilityConverter.CollapsedWhenNullElseVisible}}">
                    <TextBlock Foreground="{x:Static sideways:Brushes.Gray}" Text="{Binding Simulation.Balance, StringFormat='#,#'}" />

                    <Button Command="{Binding BuyCommand}"
                            Content="Buy"
                            Focusable="False" />

                    <Button Command="{Binding SellAllCommand}"
                            Content="Sell all"
                            Focusable="False" />

                    <Button Command="{Binding SellHalfCommand}"
                            Content="Sell half"
                            Focusable="False" />

                    <Button Command="Save"
                            Content="Save"
                            Focusable="False">
                        <Button.CommandBindings>
                            <CommandBinding CanExecute="OnCanSaveSimulation"
                                            Command="Save"
                                            Executed="OnSaveSimulation" />
                        </Button.CommandBindings>
                    </Button>
                    <Button Command="Close"
                            Content="Close"
                            Focusable="False">
                        <Button.CommandBindings>
                            <CommandBinding Command="Close" Executed="OnCloseSimulation" />
                        </Button.CommandBindings>
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</Window>
