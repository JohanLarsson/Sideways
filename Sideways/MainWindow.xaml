<Window x:Class="Sideways.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:alphaVantage="clr-namespace:Sideways.AlphaVantage"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Sideways"
        Title="Sideways"
        d:DataContext="{d:DesignInstance local:MainViewModel,
                                         IsDesignTimeCreatable=False}"
        local:SelectCommands.IsEnabled="True"
        Background="{x:Static local:Brushes.Background}"
        FocusManager.FocusedElement="{Binding ElementName=SymbolBox}"
        Loaded="OnLoaded"
        TextElement.Foreground="{x:Static local:Brushes.Text}"
        WindowState="Maximized"
        mc:Ignorable="d">
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="BorderThickness" Value="4" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Style.Triggers>
                <Trigger Property="WindowState" Value="Maximized">
                    <!--  Hack around WPF weirdness, bonds not correct when maximized  -->
                    <Setter Property="BorderThickness" Value="8" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Style>

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="24"
                      CornerRadius="0"
                      GlassFrameThickness="0"
                      NonClientFrameEdges="None"
                      ResizeBorderThickness="4"
                      UseAeroCaptionButtons="False" />
    </WindowChrome.WindowChrome>

    <Window.CommandBindings>
        <CommandBinding Command="Copy" Executed="OnCopy" />
        <CommandBinding Command="Paste" Executed="OnPaste" />
    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Command="{Binding AddBookmarkCommand}" Gesture="Ctrl+B" />
        <KeyBinding Command="{Binding AddToWatchlistCommand}" Gesture="Ctrl+W" />
        <KeyBinding local:Priority.Over="{Binding ElementName=SymbolBox}"
                    Command="{Binding Animation.ToggleCommand}"
                    Gesture="Space" />

        <KeyBinding local:Priority.Over="{Binding ElementName=SymbolBox}"
                    Command="{Binding MoveToStartCommand}"
                    Gesture="Home" />

        <KeyBinding local:Priority.Over="{Binding ElementName=SymbolBox}"
                    Command="{Binding MoveToEndCommand}"
                    Gesture="End" />

        <KeyBinding local:Priority.Over="{Binding ElementName=SymbolBox}"
                    Command="Copy"
                    Gesture="Ctrl+C" />

        <KeyBinding Key="Left"
                    Command="{Binding SkipLeftCommand}"
                    CommandParameter="{x:Static local:CandleInterval.Day}" />

        <KeyBinding Key="Left"
                    Command="{Binding SkipLeftCommand}"
                    CommandParameter="{x:Static local:CandleInterval.Hour}"
                    Modifiers="Shift" />

        <KeyBinding Key="Right"
                    Command="{Binding SkipRightCommand}"
                    CommandParameter="{x:Static local:CandleInterval.Day}" />

        <KeyBinding Key="Right"
                    Command="{Binding SkipRightCommand}"
                    CommandParameter="{x:Static local:CandleInterval.Hour}"
                    Modifiers="Shift" />

    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="24" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid x:Name="TitleBar">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0" Orientation="Horizontal">
                <TextBlock Text="Sideways" />
                <!--<TextBlock Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=(FocusManager.FocusedElement), StringFormat=' FocusManager.FocusedElement: {0}'}" />
                <TextBlock Text="{Binding Path=(Keyboard.FocusedElement), StringFormat=' Keyboard.FocusedElement: {0}'}" />-->
            </StackPanel>

            <StackPanel Grid.Column="1" Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style x:Key="NavigationButton"
                           BasedOn="{StaticResource {x:Type RadioButton}}"
                           TargetType="{x:Type RadioButton}">
                        <Setter Property="Width" Value="40" />
                        <Setter Property="Height" Value="24" />
                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                        <Setter Property="GroupName" Value="NavigationButtons" />
                        <Setter Property="local:Toggle.IsChecked" Value="True" />
                    </Style>
                </StackPanel.Resources>

                <RadioButton x:Name="BookmarksButton"
                             Style="{StaticResource NavigationButton}"
                             ToolTip="Bookmarks">
                    <Path Data="{StaticResource BookmarkGeometry}"
                          Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type RadioButton}},
                                         Path=Foreground}"
                          Style="{StaticResource IconStyle}" />
                </RadioButton>

                <RadioButton x:Name="ScanButton"
                             Style="{StaticResource NavigationButton}"
                             ToolTip="Scan">
                    <Path Data="{StaticResource MagnifyingGlassGeometry}"
                          Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type RadioButton}},
                                         Path=Foreground}"
                          Style="{StaticResource IconStyle}" />
                </RadioButton>

                <RadioButton x:Name="SimulationButton"
                             Style="{StaticResource NavigationButton}"
                             ToolTip="Simulation">
                    <Path Data="{StaticResource CandleSticksGeometry}"
                          Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type RadioButton}},
                                         Path=Foreground}"
                          Style="{StaticResource IconStyle}" />
                </RadioButton>

                <RadioButton x:Name="DownloadButton"
                             Style="{StaticResource NavigationButton}"
                             ToolTip="Downloader">
                    <Path Data="{StaticResource ArrowDownGeometry}"
                          Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type RadioButton}},
                                         Path=Foreground}"
                          Style="{StaticResource IconStyle}" />
                </RadioButton>

                <RadioButton x:Name="SettingsButton"
                             Style="{StaticResource NavigationButton}"
                             ToolTip="Settings">
                    <Path Data="{StaticResource CogsGeometry}"
                          Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type RadioButton}},
                                         Path=Foreground}"
                          Style="{StaticResource IconStyle}" />
                </RadioButton>
            </StackPanel>

            <StackPanel x:Name="WindowButtons"
                        Grid.Column="2"
                        Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style x:Key="WindowButton"
                           BasedOn="{StaticResource {x:Type Button}}"
                           TargetType="{x:Type Button}">
                        <Setter Property="Width" Value="40" />
                        <Setter Property="Height" Value="24" />
                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                    </Style>
                </StackPanel.Resources>

                <Button x:Name="WindowMinimizeButton"
                        Click="OnClickMinimize"
                        Style="{StaticResource WindowButton}">
                    <Path Data="{StaticResource WindowMinimizeGeometry}" Style="{StaticResource IconStyle}" />
                </Button>

                <Button x:Name="WindowMaximizeRestoreButton"
                        Click="OnClickMaximizeRestore"
                        Style="{StaticResource WindowButton}">
                    <Path Data="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState, Converter={local:WindowStateToGeometryConverter MaximizeGeometry={StaticResource WindowMaximizeGeometry}, RestoreGeometry={StaticResource WindowRestoreGeometry}}}" Style="{StaticResource IconStyle}" />
                </Button>

                <Button x:Name="WindowCloseButton"
                        Click="OnClickClose"
                        Style="{StaticResource WindowButton}">
                    <Path Data="{StaticResource WindowCloseGeometry}" Style="{StaticResource IconStyle}" />
                </Button>
            </StackPanel>
        </Grid>

        <Grid x:Name="Root" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="LeftColumn" Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition x:Name="MiddleColumn" Width="2*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition x:Name="RightColumn" Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition x:Name="ContextColumn" Width="Auto" />
            </Grid.ColumnDefinitions>

            <Grid x:Name="LeftPane" Grid.Column="0">
                <TextBlock HorizontalAlignment="Left"
                           VerticalAlignment="Top"
                           Foreground="{x:Static local:Brushes.Gray}"
                           Text="W" />
                <local:Chart x:Name="LeftChart"
                                CandleInterval="Week"
                                ItemsSource="{Binding CurrentSymbol.Candles}"
                                Time="{Binding Time}">
                    <local:CrossHairDecorator>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="5*" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <local:ChartBackground Grid.Row="0"
                                                      Grid.RowSpan="3"
                                                      Grid.Column="0"
                                                      Bookmarks="{Binding Bookmarks.SelectedBookmarkFile.Bookmarks}"
                                                      SelectedBookmark="{Binding Bookmarks.SelectedBookmark}"
                                                      SelectedScanResult="{Binding Scan.SelectedResult}"
                                                      Symbol="{Binding CurrentSymbolText,
                                                                       Mode=OneWay}" />

                            <Grid Grid.Row="0" Grid.Column="0">

                                <local:MovingAverage Period="10" Stroke="{x:Static local:Brushes.Ma10}" />

                                <local:MovingAverage Period="20" Stroke="{x:Static local:Brushes.Ma20}" />

                                <local:MeasureDecorator>
                                    <local:CandleSticks />
                                </local:MeasureDecorator>
                            </Grid>

                            <local:PriceTickBar Grid.Row="0" Grid.Column="1" />

                            <local:TimeTickBar Grid.Row="1" Grid.Column="0" />

                            <local:VolumeBars Grid.Row="2" Grid.Column="0" />
                        </Grid>
                    </local:CrossHairDecorator>
                </local:Chart>
            </Grid>

            <GridSplitter Grid.Column="1"
                          Focusable="False"
                          IsHitTestVisible="{Binding ElementName=MiddlePane,
                                                     Path=ActualWidth,
                                                     Converter={local:GreaterThanConverter 0}}"
                          Style="{StaticResource VerticalAxisGridSplitter}">
                <GridSplitter.InputBindings>
                    <MouseBinding Command="{x:Static local:VerticalGridSplitter.TogglePreviousCommand}" MouseAction="LeftDoubleClick" />
                </GridSplitter.InputBindings>
            </GridSplitter>

            <Grid x:Name="MiddlePane" Grid.Column="2">
                <local:Chart x:Name="MiddleChart"
                                CandleInterval="Day"
                                ItemsSource="{Binding CurrentSymbol.Candles}"
                                Time="{Binding Time}">
                    <local:CrossHairDecorator>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="5*" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <local:ChartBackground Grid.Row="0"
                                                      Grid.RowSpan="3"
                                                      Grid.Column="0"
                                                      Bookmarks="{Binding Bookmarks.SelectedBookmarkFile.Bookmarks}"
                                                      Earnings="{Binding CurrentSymbol.QuarterlyEarnings}"
                                                      SelectedBookmark="{Binding Bookmarks.SelectedBookmark}"
                                                      SelectedScanResult="{Binding Scan.SelectedResult}"
                                                      Symbol="{Binding CurrentSymbolText,
                                                                       Mode=OneWay}" />

                            <Grid Grid.Row="0" Grid.Column="0">

                                <local:MovingAverage Period="10" Stroke="{x:Static local:Brushes.Ma10}" />

                                <local:MovingAverage Period="20" Stroke="{x:Static local:Brushes.Ma20}" />

                                <local:MovingAverage Period="50" Stroke="{x:Static local:Brushes.Ma50}" />

                                <local:MovingAverage Period="100" Stroke="{x:Static local:Brushes.Ma100}" />

                                <local:MovingAverage Period="150" Stroke="{x:Static local:Brushes.Ma150}" />

                                <local:MovingAverage Period="200" Stroke="{x:Static local:Brushes.Ma200}" />

                                <local:MeasureDecorator>
                                    <local:MeasureDecorator.CommandBindings>
                                        <CommandBinding Command="{x:Static local:Bookmark.AddCommand}" Executed="AddBookMark" />
                                    </local:MeasureDecorator.CommandBindings>
                                    <local:MeasureDecorator.InputBindings>
                                        <MouseBinding Command="{x:Static local:Bookmark.AddCommand}" MouseAction="LeftDoubleClick" />
                                    </local:MeasureDecorator.InputBindings>
                                    <local:CandleSticks />
                                </local:MeasureDecorator>

                                <local:EarningsBar VerticalAlignment="Bottom" Earnings="{Binding CurrentSymbol.QuarterlyEarnings}" />
                            </Grid>

                            <local:PriceTickBar Grid.Row="0" Grid.Column="1" />

                            <local:TimeTickBar Grid.Row="1" Grid.Column="0" />

                            <local:VolumeBars Grid.Row="2" Grid.Column="0" />
                        </Grid>
                    </local:CrossHairDecorator>
                </local:Chart>

                <StackPanel Margin="10,10"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Background="{x:Static local:Brushes.SemiTransparentBackground}">
                    <StackPanel Orientation="Horizontal">
                        <ComboBox x:Name="SymbolBox"
                                  HorizontalAlignment="Left"
                                  local:ComboBoxEx.IsSymbolSearch="True"
                                  FontSize="24"
                                  Foreground="{x:Static local:Brushes.Gray}"
                                  IsEditable="True"
                                  ItemsSource="{Binding Symbols}"
                                  SelectedItem="{Binding CurrentSymbolText}"
                                  Text="{Binding CurrentSymbolText,
                                                 UpdateSourceTrigger=Explicit}" />

                        <Button Padding="2,0"
                                d:DataContext="{d:DesignInstance Type=alphaVantage:SymbolDownloads}"
                                Command="{Binding DownloadCommand}"
                                Content="{Binding State.Status}"
                                ContentTemplateSelector="{StaticResource DownloadStatusIconSelector}"
                                Focusable="False"
                                ToolTipService.ShowOnDisabled="True"
                                Visibility="{Binding .,
                                                     Converter={x:Static local:NullToVisibilityConverter.CollapsedWhenNullElseVisible}}">
                            <Button.ToolTip>
                                <ToolTip Content="{Binding RelativeSource={RelativeSource Self}, Path=PlacementTarget.DataContext}" ContentTemplate="{StaticResource SymbolDownloadsTemplate}" />
                            </Button.ToolTip>
                            <Button.DataContext>
                                <MultiBinding Converter="{x:Static local:SymbolDownloadConverter.Default}">
                                    <Binding Path="CurrentSymbol.Symbol" />
                                    <Binding Path="Downloader.SymbolDownloads" />
                                </MultiBinding>
                            </Button.DataContext>
                        </Button>
                    </StackPanel>

                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding Converter="{x:Static local:AdrConverter.Default}" StringFormat="ADR {0:F1}">
                                <Binding ElementName="MiddleChart" Path="ItemsSource" />
                                <Binding ElementName="MiddleChart" Path="Time" />
                                <Binding ElementName="MiddleChart" Path="PriceRange" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>

                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding Converter="{x:Static local:AtrConverter.Default}" StringFormat="ATR {0:F1}$">
                                <Binding ElementName="MiddleChart" Path="ItemsSource" />
                                <Binding ElementName="MiddleChart" Path="Time" />
                                <Binding ElementName="MiddleChart" Path="PriceRange" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>

                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding Converter="{x:Static local:AverageDollarVolumeConverter.Default}" StringFormat="A$ {0}">
                                <Binding ElementName="MiddleChart" Path="Candles" />
                                <Binding ElementName="MiddleChart" Path="Time" />
                                <Binding ElementName="MiddleChart" Path="PriceRange" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>

                    <TextBlock Text="{Binding Time, StringFormat='f'}" />
                    <TextBlock Foreground="{x:Static local:Brushes.Error}" Text="{Binding CurrentSymbol.Exception.Message, FallbackValue=''}" />
                </StackPanel>
            </Grid>

            <GridSplitter Grid.Column="3"
                          Focusable="False"
                          Style="{StaticResource VerticalAxisGridSplitter}">
                <GridSplitter.InputBindings>
                    <MouseBinding Command="{x:Static local:VerticalGridSplitter.ToggleNextCommand}" MouseAction="LeftDoubleClick" />
                </GridSplitter.InputBindings>
            </GridSplitter>

            <Grid x:Name="RightPane" Grid.Column="4">
                <local:Chart x:Name="RightChart"
                                CandleInterval="Hour"
                                ItemsSource="{Binding CurrentSymbol.Candles}"
                                Time="{Binding Time}">
                    <local:CrossHairDecorator>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="5*" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <local:ChartBackground Grid.Row="0"
                                                      Grid.RowSpan="3"
                                                      Grid.Column="0"
                                                      Bookmarks="{Binding Bookmarks.SelectedBookmarkFile.Bookmarks}"
                                                      SelectedBookmark="{Binding Bookmarks.SelectedBookmark}"
                                                      SelectedScanResult="{Binding Scan.SelectedResult}"
                                                      Symbol="{Binding CurrentSymbolText,
                                                                       Mode=OneWay}" />

                            <Grid Grid.Row="0" Grid.Column="0">
                                <local:MovingAverage Period="10" Stroke="{x:Static local:Brushes.Ma10}" />

                                <local:MovingAverage Period="20" Stroke="{x:Static local:Brushes.Ma20}" />

                                <local:MovingAverage Period="50" Stroke="{x:Static local:Brushes.Ma50}" />

                                <local:VWap Stroke="{x:Static local:Brushes.LightGray}" />

                                <local:MeasureDecorator>
                                    <local:MeasureDecorator.CommandBindings>
                                        <CommandBinding Command="{x:Static local:Bookmark.AddCommand}" Executed="AddBookMark" />
                                    </local:MeasureDecorator.CommandBindings>
                                    <local:MeasureDecorator.InputBindings>
                                        <MouseBinding Command="{x:Static local:Bookmark.AddCommand}" MouseAction="LeftDoubleClick" />
                                    </local:MeasureDecorator.InputBindings>

                                    <local:CandleSticks />
                                </local:MeasureDecorator>
                            </Grid>

                            <local:PriceTickBar Grid.Row="0" Grid.Column="1" />

                            <local:TimeTickBar Grid.Row="1" Grid.Column="0" />

                            <local:VolumeBars Grid.Row="2" Grid.Column="0" />
                        </Grid>
                    </local:CrossHairDecorator>
                </local:Chart>
                <StackPanel x:Name="IntradayIntervals"
                            Margin="12,12"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Orientation="Horizontal">
                    <StackPanel.Resources>
                        <Style BasedOn="{StaticResource {x:Type RadioButton}}" TargetType="{x:Type RadioButton}">
                            <Setter Property="GroupName" Value="RightIntervals" />
                            <Setter Property="MinWidth" Value="32" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RadioButton}">
                                        <Border Background="{TemplateBinding Background}">
                                            <TextBlock HorizontalAlignment="Center"
                                                       Foreground="{TemplateBinding Foreground}"
                                                       Text="{TemplateBinding Content}" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </StackPanel.Resources>
                    <RadioButton x:Name="HourButton"
                                 Content="h"
                                 IsChecked="{Binding ElementName=RightChart,
                                                     Path=CandleInterval,
                                                     Converter={x:Static local:CandleIntervalToBoolConverter.Hour}}" />
                    <RadioButton Content="15 m" IsChecked="{Binding ElementName=RightChart, Path=CandleInterval, Converter={x:Static local:CandleIntervalToBoolConverter.FifteenMinutes}}" />
                    <RadioButton Content="5 m" IsChecked="{Binding ElementName=RightChart, Path=CandleInterval, Converter={x:Static local:CandleIntervalToBoolConverter.FiveMinutes}}" />
                    <RadioButton Content="1 m" IsChecked="{Binding ElementName=RightChart, Path=CandleInterval, Converter={x:Static local:CandleIntervalToBoolConverter.Minute}}" />
                </StackPanel>
            </Grid>

            <GridSplitter Grid.Column="5"
                          Focusable="False"
                          IsHitTestVisible="{Binding ElementName=RightPane,
                                                     Path=ActualWidth,
                                                     Converter={local:GreaterThanConverter 0}}"
                          Style="{StaticResource VerticalAxisGridSplitter}">
                <GridSplitter.InputBindings>
                    <MouseBinding Command="{x:Static local:VerticalGridSplitter.ToggleNextCommand}" MouseAction="LeftDoubleClick" />
                </GridSplitter.InputBindings>
            </GridSplitter>

            <Grid x:Name="ContextPane" Grid.Column="6">
                <local:SimulationView HorizontalAlignment="Right"
                                         DataContext="{Binding Simulation}"
                                         Visibility="{Binding ElementName=SimulationButton,
                                                              Path=IsChecked,
                                                              Converter={x:Static local:BoolToVisibilityConverter.VisibleWhenTrueElseCollapsed}}" />

                <local:BookmarksView HorizontalAlignment="Right"
                                        DataContext="{Binding Bookmarks}"
                                        Visibility="{Binding ElementName=BookmarksButton,
                                                             Path=IsChecked,
                                                             Converter={x:Static local:BoolToVisibilityConverter.VisibleWhenTrueElseCollapsed}}" />

                <local:ScanView HorizontalAlignment="Right"
                                   DataContext="{Binding Scan}"
                                   Visibility="{Binding ElementName=ScanButton,
                                                        Path=IsChecked,
                                                        Converter={x:Static local:BoolToVisibilityConverter.VisibleWhenTrueElseCollapsed}}" />

                <local:DownloadView Margin="6,0,0,0"
                                       HorizontalAlignment="Right"
                                       DataContext="{Binding Downloader}"
                                       Visibility="{Binding ElementName=DownloadButton,
                                                            Path=IsChecked,
                                                            Converter={x:Static local:BoolToVisibilityConverter.VisibleWhenTrueElseCollapsed}}" />

                <local:SettingsView HorizontalAlignment="Right"
                                       DataContext="{Binding Settings}"
                                       Visibility="{Binding ElementName=SettingsButton,
                                                            Path=IsChecked,
                                                            Converter={x:Static local:BoolToVisibilityConverter.VisibleWhenTrueElseCollapsed}}" />
            </Grid>
        </Grid>
    </Grid>
</Window>
